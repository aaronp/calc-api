/** Basic Calculator Service A simple calculator API that performs basic arithmetic operations.
  *
  * OpenAPI spec version: 1.0.0 Contact: contact@kindservices.co.uk
  *
  * NOTE: This class is auto generated by the swagger code generator program.
  * https://github.com/swagger-api/swagger-codegen.git
  */

// this model was generated using model.mustache
package demo.calc.model
import scala.math.BigDecimal
import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*

case class CalculateRequest(
    /* Left hand side operand. */

    lhs: Long,

    /* Arithmetic operator. */

    operator: CalculateRequest.OperatorEnum,

    /* Right hand side operand. */

    rhs: Long
) {

  def asJson = write(this)

}

object CalculateRequest {

  enum OperatorEnum derives ReadWriter {
    case add
    case subtract
    case divide
    case multiply
  }

  given RW[CalculateRequest] = macroRW

  def fromJsonString(jason: String): CalculateRequest = try {
    read[CalculateRequest](jason)
  } catch {
    case NonFatal(e) => sys.error(s"Error parsing json '$jason': $e")
  }

  def manyFromJsonString(jason: String): List[CalculateRequest] = try {
    read[List[CalculateRequest]](jason)
  } catch {
    case NonFatal(e) => sys.error(s"Error parsing json '$jason' as list: $e")
  }

  def mapFromJsonString(jason: String): Map[String, CalculateRequest] = try {
    read[Map[String, CalculateRequest]](jason)
  } catch {
    case NonFatal(e) => sys.error(s"Error parsing json '$jason' as map: $e")
  }

}
